---
repos:
  # Normalise all Python code. (Black + isort + pyupgrade + autoflake)
  - repo: https://github.com/Zac-HD/shed
    rev: 0.4.0
    hooks:
    - id: shed
  # Python Linting
  - repo: https://gitlab.com/pycqa/flake8
    rev: 3.9.2
    hooks:
      - id: flake8
        additional_dependencies:
          - dlint # Check common security issues
          - flake8-broken-line # Don't escape newlines. (surround in parens or simplify)
          - flake8-bugbear # Lint-checks too opinionated for flake8 proper
          - flake8-builtins # Don't allow built-in names like list
          - flake8-coding # Only UTF-8
          - flake8-debugger # Don't commit debugger calls
          - flake8-executable # Check shebangs and executable permissions
          - flake8-logging-format # Use log arguments, not string format
          - flake8-pep3101 # Don't use old string % formatting
          - flake8-pytest-style # Avoid common pytest mistakes
          - flake8-pytest # Use plain assert, not unittest assertions
          - flake8-rst-docstrings # docstring should be valid ReST
          - pep8-naming # Follow pep8 naming rules (eg. function names lowercase)
  # Lint Python snippets embedded in Markdown (using flake8)
  - repo: https://github.com/johnfraney/flake8-markdown
    rev: v0.2.0
    hooks:
      - id: flake8-markdown
  # Lint Jinja2 templates
  - repo: https://github.com/thibaudcolas/curlylint
    rev: "v0.13.0"
    hooks:
    - id: curlylint
  # Lint Yaml files
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.26.3
    hooks:
      - id: yamllint
        args: [-s]
  # Common pre-commit checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      - id: check-added-large-files # We don't want huge files. (Cut down test data!)
        args: ['--maxkb=2000']
      - id: check-case-conflict # Don't allow files that differ by case sensitivity.
      - id: check-docstring-first # Avoid common error of code before docstring.
      - id: check-json # Check json file syntax
        # (Exclude Typescript config: it uses json5 extensions)
        exclude: 'tsconfig.json'
      - id: check-merge-conflict # Don't commit merge-conflicts
      - id: check-symlinks # Symlinks that don't point to anything?
      - id: check-yaml # Check Yaml file syntax
        args: [--allow-multiple-documents]
      - id: debug-statements # Avoid commiting debug/breakpoints
      - id: end-of-file-fixer # Normalise on exactly one newline
      - id: fix-byte-order-marker # No UTF-8 byte order marks
      - id: mixed-line-ending # Don't allow mixed line endings
      - id: pretty-format-json
        args: ['--no-sort-keys', '--indent=4', '--autofix']
        # (Exclude Typescript config: it uses json5 extensions)
        exclude: 'tsconfig.json'
      - id: requirements-txt-fixer # Keep requirements files sorted.
      - id: trailing-whitespace # Auto remove trailing whitespace
